// 相等比较和非相等比较。两者的规则是不一样的，对于非相等的比较，算法是先看两个运算子是否都是字符串，
// 如果是的，就按照字典顺序比较（实际上是比较 Unicode 码点）；否则，将两个运算子都转成数值，再比较数值的大小。

// 1.非相等运算符==>字符串比较
console.log('dog' > 'cat'); //JavaScript 引擎内部首先比较首字符的 Unicode 码点。如果相等，再比较第二个字符的 Unicode 码点，以此类推

// 2.非相等运算符==>非字符串比较
// (1) 原始类型 把非数值转化成数值
console.log(5 > '4');   //Number(4)
// (2) 对象 转化成原始类型的值  先调用valueOf 如果返回的还是对象  再调用 toString


// 3.严格相等运算符
// JavaScript 提供两种相等运算符：==和===。

// 简单说，它们的区别是相等运算符（==）比较两个值是否相等，严格相等运算符（===）比较它们是否为“同一个值”。
// 如果两个值不是同一类型，严格相等运算符（===）直接返回false，而相等运算符（==）会将它们转换成同一个类型，再用严格相等运算符进行比较


// 4.严格不相等运算符
// 严格相等运算符有一个对应的“严格不相等运算符”（!==），它的算法就是先求严格相等运算符的结果，然后返回相反值。


// 5.相等运算符
// 相等运算符用来比较相同类型的数据时，与严格相等运算符完全一样
// 比较不同类型的数据时，相等运算符会先将数据进行类型转换，然后再用严格相等运算符比较。

// 6.不相等运算符
// 相等运算符有一个对应的“不相等运算符”（!=），它的算法就是先求相等运算符的结果，然后返回相反值